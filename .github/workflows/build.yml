name: Build Installers

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build Windows installer
      run: npm run build:win
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-installer
        path: dist/*.exe
        
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build macOS installer
      run: npm run build:mac
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: macos-installer
        path: |
          dist/*.dmg
          dist/*.zip
          
  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Display structure of downloaded files
      run: ls -R
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-installer/*.exe
        asset_name: BancxMouse-Setup.exe
        asset_content_type: application/octet-stream
